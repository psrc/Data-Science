-- ###### This SQL script is to record what I did to the 2017 and previous years permit dataset. 
-- It is a one time manipulation, but I would like to document what I did. 

--- STEP1: SAVE THE TABLE INTO A COPY VERSION 
-- copy paste the original table to a new table, as a work station
SELECT * 
INTO Angela.REG16PMT_COPY
FROM Angela.REG16PMT

-- copy paste the original table to a new table, as a work station
SELECT * 
INTO Angela.REG17PMT_COPY
FROM Angela.FOUR_COUNTIES_17


-- EXPLORE THE DATA, TO SEE WHICH COLUMNS AND DATA TYPES I HAVE TO FIX.
-- to see the column names and data type from previous years data 
select COLUMN_NAME, DATA_TYPE, IS_NULLABLE
from INFORMATION_SCHEMA.COLUMNS 
WHERE TABLE_NAME = N'REG16PMT_COPY' and COLUMN_NAME NOT IN 
(select COLUMN_NAME
from INFORMATION_SCHEMA.COLUMNS 
WHERE TABLE_NAME = N'REG17PMT_COPY')


-- to see the column names and data type for current year data 
SELECT COLUMN_NAME
from INFORMATION_SCHEMA.COLUMNS 
WHERE TABLE_NAME = N'REG17PMT_COPY' and COLUMN_NAME NOT IN 
(select COLUMN_NAME
from INFORMATION_SCHEMA.COLUMNS 
WHERE TABLE_NAME = N'REG16PMT_COPY' )


-- STEP2: RENAME THE COLUMNS
-- change the column name for PEG16PMT
EXEC sp_rename 'Angela.REG16PMT_COPY.DELETE', 'DELETE_', 'COLUMN'; 
EXEC sp_rename 'Angela.REG16PMT_COPY.CHECK', 'CHECK_', 'COLUMN';  
EXEC sp_rename 'Angela.REG16PMT_COPY.STR16', 'STR', 'COLUMN';
EXEC sp_rename 'Angela.REG16PMT_COPY.JURIS16', 'JURIS17', 'COLUMN';
EXEC sp_rename 'Angela.REG16PMT_COPY.PLC16', 'PLC17', 'COLUMN';
EXEC sp_rename 'Angela.REG16PMT_COPY.UGA16', 'UGA17', 'COLUMN'; 

-- change the column name for PEG17PMT
EXEC sp_rename 'Angela.REG17PMT_COPY.JURIS', 'JURIS17', 'COLUMN';
EXEC sp_rename 'Angela.REG17PMT_COPY.PLC', 'PLC17', 'COLUMN';
EXEC sp_rename 'Angela.REG17PMT_COPY.UGA', 'UGA17', 'COLUMN'; 
EXEC sp_rename 'Angela.REG17PMT_COPY.MULTCNTY', 'MULTICNTY', 'COLUMN'; 
EXEC sp_rename 'Angela.REG17PMT_COPY.JURIS15', 'JURIS', 'COLUMN'; 
EXEC sp_rename 'Angela.REG17PMT_COPY.PLC15', 'PLC', 'COLUMN'; 
EXEC sp_rename 'Angela.REG17PMT_COPY.BLKID', 'BLOCKID', 'COLUMN';
EXEC sp_rename 'Angela.REG17PMT_COPY.STR17', 'STR', 'COLUMN'; 



-- STEP3: INSERT THE MISSING COLUMNS
-- insert columns in 2017 data 
ALTER TABLE Angela.REG17PMT_copy 
  ADD ISSUEDYEAR NVARCHAR NULL,
    SUBGROUP bit NULL, 
    REGEO bit NULL, 
    QCD bit NULL, 
    DELETE_ bit NULL, 
    CHECK_ bit NULL,
    --PSRCIDXY NVARCHAR(255) NULL,
    PLCNOTE NVARCHAR(100) NULL,
    STR17 NVARCHAR(255) NULL,
    OTHER_DT DATETIME2(0) NULL,
    MONTH NVARCHAR(50) NULL,
    SUBAREA NVARCHAR(255) NULL,
    TYPE2 NVARCHAR(255) NULL,
    TYPE3 NVARCHAR(255) NULL,
    TYPE4 NVARCHAR(255) NULL,
    PS2 NVARCHAR(255) NULL,
    TRACT10 NVARCHAR(255) NULL;



-- STEP4: DROP THE COLUMNS 
ALTER TABLE Angela.REG17PMT_copy 
DROP COLUMN COUNTY, PSRCIDN, CHECK_DUPLICATED, NOTES7;

ALTER TABLE Angela.REG16PMT_copy 
DROP COLUMN SSMA_TimeStamp;


-- STEP5: FIX THE DATA TYPE
-- compare the data tyles withi nspecific columns  
select a.COLUMN_NAME, a.DATA_TYPE, b.DATA_TYPE
FROM (select COLUMN_NAME, DATA_TYPE
from INFORMATION_SCHEMA.COLUMNS 
WHERE TABLE_NAME = N'REG16PMT_COPY') as a 
INNER JOIN 
(select COLUMN_NAME, DATA_TYPE
from INFORMATION_SCHEMA.COLUMNS 
WHERE TABLE_NAME = N'REG17PMT_COPY') as b
ON a.COLUMN_NAME = b.COLUMN_NAME
--where a.DATA_TYPE != b.DATA_TYPE

-- change the data type, so two tables could line up 
ALTER TABLE REG16PMT_COPY
ALTER COLUMN MULTIREC NVARCHAR(500)

ALTER TABLE REG17PMT_COPY
ALTER COLUMN TYPE NVARCHAR(500)

ALTER TABLE REG17PMT_COPY
ALTER COLUMN PS NVARCHAR(500)

ALTER TABLE REG17PMT_COPY
ALTER COLUMN PS NVARCHAR(500)

ALTER TABLE REG17PMT_COPY
ALTER COLUMN UNITS float

ALTER TABLE REG17PMT_COPY
ALTER COLUMN BLDGS float

ALTER TABLE REG16PMT_COPY
ALTER COLUMN LOTSIZE NVARCHAR(500)

ALTER TABLE REG17PMT_COPY
ALTER COLUMN JURIS NVARCHAR(500)

ALTER TABLE REG17PMT_COPY
ALTER COLUMN PLC17 NVARCHAR(500)

ALTER TABLE REG17PMT_COPY
ALTER COLUMN PROJYEAR NVARCHAR(500)

ALTER TABLE REG17PMT_COPY
ALTER COLUMN CNTY NVARCHAR(500)

ALTER TABLE REG16PMT_COPY
ALTER COLUMN MULTICNTY NVARCHAR(500)

ALTER TABLE REG17PMT_COPY
ALTER COLUMN RUNTYPE NVARCHAR(500)

ALTER TABLE REG17PMT_COPY
ALTER COLUMN UGA17 NVARCHAR(500)

ALTER TABLE REG16PMT_COPY
ALTER COLUMN ISSUED DATE
ALTER TABLE REG16PMT_COPY
ALTER COLUMN FINALED DATE

ALTER TABLE REG16PMT_COPY
ALTER COLUMN VALUE NVARCHAR(500)

ALTER TABLE REG16PMT_COPY
ALTER COLUMN DELETE_ NVARCHAR(500)
ALTER TABLE REG17PMT_COPY
ALTER COLUMN DELETE_ NVARCHAR(500)


-- STEP6: PDATE TABLE COLUMN VALUE
UPDATE Angela.REG17PMT_COPY SET PROJYEAR = 2017


-- STEP7: CREATE A VIEW HOLDS ALL DATA 

select a.COLUMN_NAME, a.DATA_TYPE, b.DATA_TYPE
FROM (select COLUMN_NAME, DATA_TYPE
from INFORMATION_SCHEMA.COLUMNS 
WHERE TABLE_NAME = N'REG16PMT_COPY') as a 
INNER JOIN 
(select COLUMN_NAME, DATA_TYPE
from INFORMATION_SCHEMA.COLUMNS 
WHERE TABLE_NAME = N'REG17PMT_COPY') as b
ON a.COLUMN_NAME = b.COLUMN_NAME
--where a.DATA_TYPE = 'date'


-- merge 2017 data with 2016- data 

create VIEW Angela.merged_view AS
SELECT  PERMITNO, SORT, MULTIREC, PIN, ADDRESS, HOUSENO, PREFIX, STRNAME, STRTYPE, SUFFIX, UNIT_BLD, ZIP, ISSUED, FINALED, STATUS, TYPE, PS, 
UNITS, BLDGS, LANDUSE, CONDO, VALUE, ZONING, NOTES, NOTES2, NOTES3, NOTES4, NOTES5, NOTES6, LOTSIZE, JURIS17, JURIS, PLC17, PLC, PROJYEAR, 
CNTY, MULTICNTY, PSRCID, PSRCIDXY, X_COORD, Y_COORD, RUNTYPE, PIN_PARENT, TRACTID, BLKGRPID, BLOCKID, UGA17, TAZ10, TAZ4K, FAZ10,
ISSUEDYEAR, SUBGROUP, REGEO, QCD, DELETE_, CHECK_, PLCNOTE, STR, 
OTHER_DT, Month, SUBAREA, TYPE2, TYPE3, TYPE4, PS2, TRACT10
FROM Angela.REG16PMT_COPY
UNION ALL
SELECT   PERMITNO, SORT, MULTIREC, PIN, ADDRESS, HOUSENO, PREFIX, STRNAME, STRTYPE, SUFFIX, UNIT_BLD, ZIP, ISSUED, FINALED, STATUS, TYPE, PS, 
UNITS, BLDGS, LANDUSE, CONDO, VALUE, ZONING, NOTES, NOTES2, NOTES3, NOTES4, NOTES5, NOTES6, LOTSIZE, JURIS17, JURIS, PLC17, PLC, PROJYEAR, 
CNTY, MULTICNTY, PSRCID, PSRCIDXY, X_COORD, Y_COORD, RUNTYPE, PIN_PARENT, TRACTID, BLKGRPID, BLOCKID, UGA17, TAZ10, TAZ4K, FAZ10,
ISSUEDYEAR, SUBGROUP, REGEO, QCD, DELETE_, CHECK_, PLCNOTE, STR, 
OTHER_DT, Month, SUBAREA, TYPE2, TYPE3, TYPE4, PS2, TRACT10
FROM Angela.REG17PMT_COPY


SELECT * FROM Angela.merged_view 